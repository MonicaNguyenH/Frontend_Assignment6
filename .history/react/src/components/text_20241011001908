import React, { useState } from 'react';
import TaskForm from './TaskForm';
import Task from './Task';

function DayPlannerApp() {
  const [tasks, setTasks] = useState([]); // State for the list of tasks

  // Add new task to the list
  const addTask = (newTask) => {
    setTasks([...tasks, { ...newTask, completed: false }]); // Add task as incomplete by default
  };

  // Part responsible for toggling completion status of a task
  const toggleComplete = (taskId) => {
    const updatedTasks = tasks.map(task =>
      task.id === taskId ? { ...task, completed: !task.completed } : task // Toggle task's completed status
    );
    setTasks(updatedTasks); // Update the state with the new task list
  };

  // Part responsible for deleting a task
  const deleteTask = (taskId) => {
    const updatedTasks = tasks.filter(task => task.id !== taskId); // Remove task by filtering it out
    setTasks(updatedTasks); // Update the state with the remaining tasks
  };

  // Count remaining (incomplete) tasks
  const remainingTasksCount = tasks.filter(task => !task.completed).length; // Calculate remaining incomplete tasks

  return (
    <div>
      <h1>Day Planner</h1>
      <TaskForm addTask={addTask} /> {/* Form to add a new task */}
      <h2>{remainingTasksCount} task{remainingTasksCount !== 1 ? 's' : ''} remaining</h2> {/* Remaining task count */}
      {tasks.map(task => (
        <Task
          key={task.id}
          id={task.id}
          name={task.name}
          completed={task.completed}
          toggleComplete={toggleComplete} // Pass the toggle function to the Task component
          deleteTask={deleteTask} // Pass the delete function to the Task component
        />
      ))}
    </div>
  );
}

export default DayPlannerApp;
